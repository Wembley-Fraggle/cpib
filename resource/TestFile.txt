program modulocalc()
global
 
 var r:int32;
 var b:int32;
 var c:int32;
 
 fun modulo(
	in copy const b:int32,
	in copy const c:int32 )
 returns var r:int32
 local
   var q:int32;
   var x:int32;
   var y:int32
 pre  Q : b >= 0 &? c > 0
 
 do
  
   debugout b;
   debugout c;
 
  q init := 0;
  r init := b;
 
  while r >= c
  inv P : b = q * c + r &? 0 <= r
  do

   q := q + 1;
   r := r - r
  endwhile
 
 post R : b = q * c + r &? 0 <= r &? r < c
 endfun

// The main program
do
 r init := 11;
 b init := 0;
 c init := 10;
 r := modulo(b, c);
 debugout r
endprogram
